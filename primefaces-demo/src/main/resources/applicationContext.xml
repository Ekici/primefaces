<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:application.properties"/>
	
	<context:component-scan base-package="com.sivalabs.pfdemo"/>
            
	<tx:annotation-driven />
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
            p:dataSource-ref="dataSource">
          <property name="jpaVendorAdapter">
              <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                    p:database="${jpa.database}" p:showSql="${jpa.showSql}"/>
          </property>
          <property name="jpaProperties">
      		<props>
      			<prop key="hibernate.dialect">${hibernate.dialect}</prop>
      			<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
      		</props>
      	</property>
          <property name="packagesToScan" value="com.sivalabs.pfdemo.entities"/>
      </bean>

      <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
      <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
            p:entityManagerFactory-ref="entityManagerFactory"/>


      <!--
          Post-processor to perform exception translation on @Repository classes (from native
          exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
      -->
      <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
          p:driverClassName="${jdbc.driverClassName}" 
          p:url="${jdbc.url}"
          p:username="${jdbc.username}" 
          p:password="${jdbc.password}"/>

    <!--
    <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/>
    -->

    <!-- Database initializer. If any of the script fails, the initialization stops. -->
    <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
   <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="${jdbc.initLocation}"/>
        <jdbc:script location="${jdbc.dataLocation}"/>
    </jdbc:initialize-database>
    
</beans>